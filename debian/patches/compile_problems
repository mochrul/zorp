Index: zorp-3.9.2/lib/proxystack.c
===================================================================
--- zorp-3.9.2.orig/lib/proxystack.c	2011-08-13 15:13:46.000000000 +0200
+++ zorp-3.9.2/lib/proxystack.c	2011-09-05 23:01:59.000000000 +0200
@@ -126,7 +126,7 @@
     }
   else
     {
-      Py_XINCREF(Py_None);
+      Py_INCREF(Py_None);
       stack_info_obj = Py_None;
     }
 
@@ -235,8 +235,6 @@
   if (strcmp(request->command->str, "SETVERDICT") == 0
      )
     {
-      ZProxyStackIface *siface;
-      
       iface = z_proxy_find_iface(proxy, Z_CLASS(ZProxyStackIface));
       if (!iface)
         {
@@ -244,7 +242,6 @@
           goto error;
         }
         
-      siface = (ZProxyBasicIface *) iface;
       if (strcmp(request->command->str, "SETVERDICT") == 0)
         {
           ZVerdict verdict;
Index: zorp-3.9.2/lib/pycore.c
===================================================================
--- zorp-3.9.2.orig/lib/pycore.c	2011-08-13 15:13:47.000000000 +0200
+++ zorp-3.9.2/lib/pycore.c	2011-09-05 23:01:59.000000000 +0200
@@ -112,7 +112,7 @@
         }
       if (!z_log_enabled(class, verbosity))
         {
-          Py_XINCREF(Py_None);
+          Py_INCREF(Py_None);
           return Py_None;
         }
       if (log_args != Py_None)
@@ -134,7 +134,7 @@
   /*NOLOG*/
   z_log(session_id, class, verbosity, "%s", msg);
   Py_XDECREF(log_msg);
-  Py_XINCREF(Py_None);
+  Py_INCREF(Py_None);
   return Py_None;
 }
  
@@ -149,7 +149,7 @@
   if (!PyArg_ParseTuple(args, "i", &exit_code))
     z_return(NULL);
   z_main_loop_quit(exit_code);
-  Py_XINCREF(Py_None);
+  Py_INCREF(Py_None);
   z_return(Py_None);
 }
 
@@ -336,7 +336,7 @@
       z_return(NULL);
     }
   z_szig_event(event, sv);
-  Py_XINCREF(Py_None);
+  Py_INCREF(Py_None);
   z_return(Py_None);
 }
 
@@ -348,7 +348,7 @@
                       PyObject *args G_GNUC_UNUSED
                      )
 {
-  Py_XINCREF(Py_None);
+  Py_INCREF(Py_None);
   return Py_None;
 }
 
Index: zorp-3.9.2/lib/pystream.c
===================================================================
--- zorp-3.9.2.orig/lib/pystream.c	2011-08-13 15:13:46.000000000 +0200
+++ zorp-3.9.2/lib/pystream.c	2011-09-05 23:01:59.000000000 +0200
@@ -412,7 +412,7 @@
       return NULL;
     }
   
-  Py_XINCREF(Py_None);
+  Py_INCREF(Py_None);
   return Py_None;
 }
 
@@ -430,7 +430,7 @@
   ZPolicyStream *self = (ZPolicyStream *) o;
 
   z_stream_close(self->stream, NULL);
-  Py_XINCREF(Py_None);
+  Py_INCREF(Py_None);
   return Py_None;
 }
 
Index: zorp-3.9.2/lib/pydispatch.c
===================================================================
--- zorp-3.9.2.orig/lib/pydispatch.c	2011-08-13 15:13:47.000000000 +0200
+++ zorp-3.9.2/lib/pydispatch.c	2011-09-05 23:01:59.000000000 +0200
@@ -411,7 +411,7 @@
   Py_XDECREF(self->handler);
   self->handler = NULL;
 
-  Py_XINCREF(Py_None);
+  Py_INCREF(Py_None);
   return Py_None;
 }
 
@@ -665,7 +665,7 @@
   memset(&buf, 0, sizeof(buf));
 
   if (!z_kzorp_get_lookup_result(fd, &buf)) {
-    Py_XINCREF(Py_None);
+    Py_INCREF(Py_None);
     return Py_None;
   }
 
Index: zorp-3.9.2/lib/pyattach.c
===================================================================
--- zorp-3.9.2.orig/lib/pyattach.c	2011-08-13 15:13:46.000000000 +0200
+++ zorp-3.9.2/lib/pyattach.c	2011-09-05 23:01:59.000000000 +0200
@@ -93,7 +93,7 @@
     }
   else
     {
-      Py_XINCREF(Py_None);
+      Py_INCREF(Py_None);
       res = Py_None;
     }
   z_leave();
@@ -136,7 +136,7 @@
         }
       else
         {
-          Py_XINCREF(Py_None);
+          Py_INCREF(Py_None);
           z_leave();
           return Py_None;
         }
Index: zorp-3.9.2/lib/pydict.c
===================================================================
--- zorp-3.9.2.orig/lib/pydict.c	2011-08-13 15:13:47.000000000 +0200
+++ zorp-3.9.2/lib/pydict.c	2011-09-05 23:01:59.000000000 +0200
@@ -394,7 +394,7 @@
             }
           else
             {
-              gsize tmp;
+              G_GNUC_UNUSED gsize tmp;
               g_assert((e->flags & (Z_VF_WRITE+Z_VF_CFG_WRITE)) == 0);
 
               e->value = va_arg(args, gchar *);
Index: zorp-3.9.2/lib/pyproxygroup.c
===================================================================
--- zorp-3.9.2.orig/lib/pyproxygroup.c	2011-08-13 15:13:46.000000000 +0200
+++ zorp-3.9.2/lib/pyproxygroup.c	2011-09-05 23:01:59.000000000 +0200
@@ -65,7 +65,7 @@
       return PyInt_FromLong(1);
     }
 
-  z_policy_var_ref(z_policy_none);
+  z_policy_none_ref();
   return z_policy_none;
 }
 
Index: zorp-3.9.2/modules/anypy/anypy.c
===================================================================
--- zorp-3.9.2.orig/modules/anypy/anypy.c	2011-08-13 15:13:50.000000000 +0200
+++ zorp-3.9.2/modules/anypy/anypy.c	2011-09-05 23:01:59.000000000 +0200
@@ -108,7 +108,7 @@
           z_object_unref(&iface->super);
         }
     }
-  z_policy_var_ref(z_policy_none);
+  z_policy_none_ref();
   res = z_policy_none;
   z_proxy_leave(self);
   return res;
Index: zorp-3.9.2/modules/http/http.c
===================================================================
--- zorp-3.9.2.orig/modules/http/http.c	2011-08-13 15:13:48.000000000 +0200
+++ zorp-3.9.2/modules/http/http.c	2011-09-05 23:01:59.000000000 +0200
@@ -381,7 +381,7 @@
         }
       else
         {
-          z_policy_var_ref(z_policy_none);
+          z_policy_none_ref();
           res = z_policy_none;
         }
       break;
@@ -395,7 +395,7 @@
         p = http_add_header(&self->headers[side], header, strlen(header), new_value, strlen(new_value));
       g_string_assign(p->value, new_value);
       p->present = TRUE;
-      z_policy_var_ref(z_policy_none);
+      z_policy_none_ref();
       res = z_policy_none;
       break;
 
Index: zorp-3.9.2/lib/zorp/policy.h
===================================================================
--- zorp-3.9.2.orig/lib/zorp/policy.h	2011-08-13 15:13:47.000000000 +0200
+++ zorp-3.9.2/lib/zorp/policy.h	2011-09-05 23:01:59.000000000 +0200
@@ -113,6 +113,8 @@
 #define Z_ERROR    ZV_ERROR
 
 #define z_policy_none Py_None
+#define z_policy_none_ref()   do { Py_INCREF(Py_None); } while (0)
+#define z_policy_none_unref() do { Py_DECREF(Py_None); } while (0)
 
 #define z_policy_var_build(format, args...) Py_BuildValue(format, ##args)
 #define z_policy_var_str(v) PyObject_Str(v)
Index: zorp-3.9.2/lib/proxyssl.c
===================================================================
--- zorp-3.9.2.orig/lib/proxyssl.c	2011-09-05 23:01:56.000000000 +0200
+++ zorp-3.9.2/lib/proxyssl.c	2011-09-05 23:01:59.000000000 +0200
@@ -588,7 +588,7 @@
       if (!sk)
         z_proxy_return(self, FALSE);
 
-      n = sk_X509_NAME_num(self->ssl_opts.local_ca_list[ndx]);
+      n = sk_X509_num(self->ssl_opts.local_ca_list[ndx]);
       for (i = 0; i < n; i++)
         sk_X509_NAME_push(sk, X509_NAME_dup(X509_get_subject_name(sk_X509_value(self->ssl_opts.local_ca_list[ndx],
                                                                                 i))));
Index: zorp-3.9.2/lib/pyx509.c
===================================================================
--- zorp-3.9.2.orig/lib/pyx509.c	2011-08-13 15:13:47.000000000 +0200
+++ zorp-3.9.2/lib/pyx509.c	2011-09-05 23:04:53.000000000 +0200
@@ -62,7 +62,7 @@
     }
   else
     {
-      Py_XINCREF(Py_None);
+      Py_INCREF(Py_None);
       return Py_None;
     }
 }
@@ -333,7 +333,7 @@
 
   if (i != -1)
     {
-      X509 *tmp;
+      G_GNUC_UNUSED X509 *tmp;
       X509 *p = sk_X509_value(self->certs, i);
       tmp = sk_X509_delete(self->certs, i);
       X509_free(p);
@@ -415,7 +415,7 @@
 static Py_ssize_t
 z_py_zorp_cert_name_list_length(ZorpCertNameList *self)
 {
-  return sk_X509_num(self->cert_names);
+  return sk_X509_NAME_num(self->cert_names);
 }
 
 static int
@@ -598,7 +598,7 @@
 
   if (i != -1)
     {
-      X509_CRL *tmp;
+      G_GNUC_UNUSED X509_CRL *tmp;
       X509_CRL *p = sk_X509_CRL_value(self->crls, i);
       tmp = sk_X509_CRL_delete(self->crls, i);
       X509_CRL_free(p);
Index: zorp-3.9.2/modules/finger/finger.c
===================================================================
--- zorp-3.9.2.orig/modules/finger/finger.c	2011-08-13 15:13:49.000000000 +0200
+++ zorp-3.9.2/modules/finger/finger.c	2011-09-05 23:01:59.000000000 +0200
@@ -223,8 +223,8 @@
 static gboolean
 finger_fetch_request(FingerProxy *self)
 {
-  gchar *p, *line, *user;
-  gint left, hop_count, userlen;
+  gchar *p, *line;
+  gint left, hop_count;
   gsize line_length;
   gint res;
   gboolean fetch_user = TRUE;
@@ -278,8 +278,6 @@
       left--;
     }
   hop_count = 0;
-  user = p;
-  userlen = left;
   g_string_truncate(self->username, 0);
   g_string_truncate(self->hostnames, 0);
   while (*p && left)
Index: zorp-3.9.2/modules/ftp/ftpcmd.c
===================================================================
--- zorp-3.9.2.orig/modules/ftp/ftpcmd.c	2011-08-13 15:13:47.000000000 +0200
+++ zorp-3.9.2/modules/ftp/ftpcmd.c	2011-09-05 23:01:59.000000000 +0200
@@ -1481,7 +1481,7 @@
       SET_ANSWER(MSG_COMMAND_NOT_ALLOWED_HERE);
       z_proxy_return(self, FTP_REQ_REJECT);
     }
-  z_proxy_return(self, FTP_REQ_ACCEPT);
+  z_proxy_return(self, res);
 }
 
 guint
@@ -1872,7 +1872,7 @@
       SET_ANSWER(MSG_COMMAND_NOT_ALLOWED_HERE);
       z_proxy_return(self, FTP_REQ_REJECT);
     }
-  z_proxy_return(self, FTP_REQ_ACCEPT);
+  z_proxy_return(self, res);
 }
 
 guint
